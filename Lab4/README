Это консольное приложение NET Framework/Windows служба, берет файлы из базы данных - AdventureWorks2019. 
А именно взята за основу родительская таблица AdventureWorks2019.Sales.SalesOrderHeader и 4 ее дочерних, доступ в которые производиться по id ключам
По ним же из базы данных программа достает нужные данных из определенных строк(id) ориантируясь на выбранные мной колонки(по итогу получается 4 столбца по 1 из 
дочерних + кол-во строк на усмотрение программиста(по умолчанию 3)
0) Cозданы модели стандартных классов исспользуемых в программе и помещены в отдельных проэкт(dll) AdventureWorks.Models  

1) При старте приложения или метода беруться данные из файлов xml или json с помощью написанного в прошлой лабораторной ConfigManager-a
(1 строка возвращаемая из метода это адрес дб, а вторая место в системе, куда мы ложим конечный xml файл)

[[[а подробнее был дополнительно дабавлен метод в класс переменной StrInt что содержить 2 string поля(Input и Output). Метод позволяет вне основного поля CM считывать 2 строки из 
XML/Jcon ориентируясь на окончание ссылки на файл(Прошлая версия с проверкой на действительность ссылок в методах сбора строк потерпела крах из-за того, что адрес на дб форматом
записи отличается от обычного, посему решено было переписать его для увеличения переисспользования в дальнейшем)]]]

2) DataManager отсылается на ServiceLayer что содержит ArrayDataXML в котором происходит создание массива считанных данных из xml строками по id

3) Попадаем в DataAccess с ArrayPartXML где считываем строку из нашей базы данных используя часть на стороне дб в виде хранимой процедуры и часть на стороне Net 

4) Возвращаемcя в DataManager и переходим в BazeToXml - создание относительно полученного массива значений xml и xsd файлов, что сразу помещают итоговые файлы в конечную папку(FTP)

В будующем возможно исспольхование вместе служны из 3 и 4 лаб вместе, но необходимо небольшое улучшение кода для создания 
каждый раз нового архивированного xml файла при изменениях актуальных данных на стороне бд
